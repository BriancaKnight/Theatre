
@model Theatre.Models.Show;
@using Theatre.Models;
@using System.Collections.Generic;


<h2>Show Details</h2>

<h3>Show Name : @Model.ShowName</h3>

@if (Model.GenreShowJoinEntities != null && Model.GenreShowJoinEntities.Count > 0)
{
  <h4>Genres</h4>
  <ul>
  @foreach (var join in Model.GenreShowJoinEntities)
  {
    <li>@join.Genre.GenreName</li>
    @using (Html.BeginForm("GenreDeleteJoin", "Shows"))
    {
      @Html.Hidden("joinId", @join.GenreShowId)
      <input type="submit" value="Delete" />
    }
  }
  </ul>
}
else{
  <p>This show does not belong to a genre.</p>
}

@if (@Model.ActorShowJoinEntities.Count == 0)
{
  <p>This show does not have any actors.</p>
}
else 
{
  <h4>This Shows's cast:</h4>
  <ul>
  @foreach (ActorShow join in Model.ActorShowJoinEntities)
  {
    <li>@join.Actor.ActorName</li>
    @using (Html.BeginForm("DeleteJoin", "Shows"))
    {
    @Html.Hidden("joinId", @join.ActorShowId)
    <input type="submit" value="Delete"/>
    }
  }
  </ul>
}
<button>@Html.ActionLink("Add Actor to Show", "AddActor", new { id = Model.ShowId})</button>
<br/>

<button>@Html.ActionLink("Edit Show", "Edit", new { id = Model.ShowId})</button>
<br />
<br />
<button>@Html.ActionLink("Delete Show", "Delete", new { id = Model.ShowId}) </button>
<br />
<br />
<button>@Html.ActionLink("Back to list", "Index")</button>
<br />
<br />
<button>@Html.ActionLink("Add a Genre", "AddGenre", new { id = Model.ShowId})</button>